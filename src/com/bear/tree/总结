许多食物存在层次关系，比如家谱，分层次组织在管理上有更高的效率
哨兵：减少判断，简化边界，逻辑统一
查找：
    1。静态查找：只有查找，没有增删
    2。动态查找：既有增删，又有查找

顺序查找拥有O(n)的时间复杂度，不太行，
二分查找，要求数组有序，时间复杂度为O(logn) 适合静态查找，但是动态查找呢，增删很麻烦
所以我们将二分的思想应用到树上面，就有了查找树，根大于左小于右，查找的效率和二分类似，增删的效率很快

树的表示
    1. 如果使用数组表示，因为一个节点有多少子节点不确定，很难表示
    2. 链表表示，如果使用传统的链表，如果n个节点，某个节点有3个子，为了结构统一，则每个节点都有三个指针域，则一共有3n个，但是一共使用了n-1个
    有很大的资源浪费，所以推出了儿子兄弟表示法，每个节点都有两个指针域，一个指向第一个孩子，一个指向兄弟节点，这样就跟二叉树很相似了。

二叉树和度为2的树的区别是二叉树有左右子树之分  n0+n1+n2-1 = 0*n0+1*n1+2*n2 ，所以n0=n2+1

二叉树的存储：
    1. 使用数组存储，完全二叉树很好存储，如果当前节点索引为n，则其左子节点为2n,右子节点为2n+1,普通二叉树要补充为完全二叉树存储，存在资源浪费
    2. 使用left和right指针来存储

先序遍历
    1. 访问根
    2. 先序访问左子树
    3. 后序访问右子树
中序和后序都是类似的，每个节点都会被访问三次，刚刚进入一个二叉树节点，从左子树回来，从右子树回来（将要离开一个节点）。

明确这个节点要做什么事情，是在三个时期哪里来做即可。